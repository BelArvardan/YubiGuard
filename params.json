{
  "name": "YubiGuard",
  "tagline": "Python script to prevent accidental triggering of YubiKeys on Linux.",
  "body": "# YubiGuard\r\n\r\nPython script to protect against accidental triggering of YubiKeys on Linux.\r\n\r\nMost recent version: 0.9\r\n\r\nA predecessor called [YubiSwitch](https://github.com/gsstark/yubiswitch-for-linux) tried to solve the same problem, but came with major security flaws, was cumbersome to use and lacked several important features.\r\n\r\n## Advantages over YubiSwitch:\r\n1. **No root privilege required to run!**\r\n2. **No unintended output release after reactivation, if you pressed your YubiKey while locked!**\r\n3. Detects YubiKeys automatically, no need to hardcode ids manually.\r\n4. Can handle multiple YubiKeys concurrently.\r\n5. Timeout which locks off YubiKey after 5 seconds.\r\n6. Automatically locking after YubiKey has been triggered.\r\n7. Panel indicator showing the activation status of YubiKey(s).\r\n\r\n## Installation & Setup\r\n1. Download zip archive here: [ZIP](https://github.com/bfelder/YubiGuard/zipball/master[)\r\n2. Extract files.\r\n3. Install dependencies.\r\n4. Run YubiGuard.py.\r\n5. Bind system key combination to the same file, but with **\"-t\"** as command line parameter.\r\n6. This key combinatin is used to unlock YubiKeys (See: Usage for further instructions.)\r\n\r\n\r\n### Requirements:\r\n- xinput (installed on most Linux distributions by default)\r\n- gir1.2-gtk-3.0\r\n- gir1.2-appindicator3\r\n- pyzmq\r\n\r\n```\r\nsudo pip install pyzmq\r\n```\r\n\r\n## Usage:\r\n- YubiLock locks output from all inserted YubiKeys by default.\r\n- The locked state is indicated in the panel by the default icon.\r\n- Simply Triggering via key combination (e.g.: super + y) will unlock YubiKey.\r\n- In the unlocked state the icon changes to green.\r\n- After triggering your YubiKey or after timeout, YubiKey will again be locked with the icon reverting back to default.\r\n- While no YubiKeys are inserted, the panel indicator will be darkened.\r\n\r\n## FAQ:\r\n**_Q:_** The LED of my YubiKey is still active. Does this mean the script is not working?\r\n**_A:_** No. LEDs will continue to blink, despite YubiKey output being blocked as intended.\r\n\r\n**_Q:_** How does YubiLock actiavte and deactivate YubiKeys?\r\n**_A:_** YubiLock uses the xinput command to identify and control the output of YubiKeys. Namely:\r\n_xinput list_, _xinput --enable <id>_, _xinput --disable <id>_ and _xinput test <id>_.\r\n\r\n## Tested on:\r\n### Linux Distributions (all 64-bit):\r\n_(Only checked working of xinput command and correct panel indicator display so far.)_\r\n\r\n- Xubuntu 15.10 (Wily Werewolf)\r\n- Xubuntu 16.04 (Xenial Xerus)\r\n- Elementary OS 0.4\r\n- Fedora 24\r\n- Linux Mint 18 (Cinnamon)\r\n- Manjaro Linux 15.09\r\n- Ubuntu 16.04\r\n\r\n\r\n### Not working on (all 64-bit):\r\n_(Those distros are not working as xinput is not installed: \"xinput: command not found\".\r\nOne might get YubiGuard to run with additional work though.)_\r\n- Debian 8.5 (Jessie)\r\n- OpenSUSE 42.1\r\n- Solus 1.2\r\n- Mageia 5\r\n\r\n\r\n\r\n### YubiKey models:\r\n- YubiKey 4 Nano\r\n- YubiKey NEO\r\n- YubiKey II\r\n\r\n## Credits:\r\n- Yubico generously provided additional YubiKey models for testing.\r\n- Stefaan Lippens' asynchronous stdout pipe allowed for an non-blocking way to monitor YubiKey output:\r\nstefaanlippens.net/python-asynchronous-subprocess-pipe-reading\r\n\r\n## Changelog:\r\n### v 0.2:\r\n- renamed to YubiLock, as this name better portrays the function\r\n- instead of text notificaions, now descriptive icons are displayed\r\n- in case of changing xinput ids (e.g. devices are switched) old ids will be automatically activated\r\n\r\n### v 0.3\r\n- beautified icons\r\n- set working dir, to always allow relative import of icons\r\n- now preventing overtriggering when hitting key combinations in short succession\r\n\r\n### v 0.4\r\n- added exit handler, which will reactivate YubiKeys after script has exited\r\n\r\n### v 0.5\r\n- code rectified\r\n- introduced missing thread locking\r\n\r\n### v 0.6 (major update)\r\n- added a Panel Indicator (replacing notification of LOCK/UNLOCK)\r\n- major rectification of code\r\n- switched from thread based concurrency to process based for superb responsiveness\r\n- added key event listener, replacing triggering via external script over zmq\r\n- added settings.ini to grant user to customize time out and triggering key combination\r\n- eliminated minor bugs which led to laggy or unreliable unlocking\r\n\r\n### v 0.7\r\n- switched back from KeyEventListener to ZmqListener, as the former interfered with YubiKey release (see issue)\r\n\r\n### v 0.8\r\n- changed name back to YubiGuard, as two other GitHub projects are already titled YubiLock\r\n- updated icons\r\n- minor rectifivation of code\r\n\r\n### v 0.9\r\n- YubiGuard.py itself is now used for triggering, when run with command line paramater: '-t'. (yg_trigger.sh removed)\r\n- fixed minor bug preventing exit when no keys were inserted\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}