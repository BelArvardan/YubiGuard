{
  "name": "YubiLock",
  "tagline": "Python script to prevent accidental triggering of YubiKeys on Linux.",
  "body": "## Advantages over YubiSwitch:\r\n1. **No root privilege required to run!**\r\n2. **No unintended output release after reactivation, if you pressed your YubiKey while locked!**\r\n3. Can handle multiple YubiKeys concurrently.\r\n4. Timeout which locks off YubiKey after 5 seconds.\r\n5. Automatically locking after YubiKey has been triggered.\r\n6. Panel indicator showing the activation status of YubiKey(s).\r\n\r\n## Installation:\r\n\r\n\r\n### Requirements:\r\n- python-xlib\r\n\r\n    sudo pip install python-xlib\r\n\r\n## Usage:\r\n- YubiLock locks output from all inserted YubiKeys by default.\r\n- the locked state is indicated in the panel by the default icon: \r\n- simply Triggering via key combination (default: ctrl_left + y) will unlock YubiKey.\r\n- in the unlocked state the icon changes to green: \r\n- after triggering your YubiKey or after timeout, YubiKey will again be locked with the icon reverting back to default\r\n- while no YubiKeys are inserted, the panel indicator will be darkened: ![off.png]({{site.baseurl}}off.png)\r\n\r\n## How to customize:\r\n- open settings.ini (default path: ~/.YubiLock/)\r\n\r\n### Customize timeout:\r\n- you may specify timeout in seconds under the **TIMEOUT** option\r\n\r\n### Customize key codes:\r\n- to get a comprehensive list of all key codes run: _xmodmap -pke_\r\n- pick the numerical key codes that correspond to the key combination you desire\r\n- one or more keys can be selected\r\n- not all keycodes work or are recommended, e.g. \"super + y\" will print out an additional \"y\"\r\n- note that system key bindings will not be overridden, so be careful not to choose one already in use\r\n- edit **KEY_CODE** option regardingly, with the keycodes separated by comma\r\n\r\n### Finally:\r\n- save settings.ini\r\n- restart YubiLock for the changes to take effect\r\n\r\n\r\n## Tested and found functional with:\r\n### Linux Distributions:\r\n- Xubuntu 15.10 (Wily Werewolf)\r\n- Xubuntu 16.04 (Xenial Xerus)\r\n\r\n### YubiKey models:\r\n- YubiKey 4 Nano\r\n\r\n### Keyboard Layout:\r\n- German (QWERTZU)\r\n\r\n\r\n## FAQ:\r\n**_Q:_** The LED of my YubiKey is still active. Does this mean the script is not working?\r\n**_A:_** No. LEDs will continue to blink, despite YubiKey output being blocked as intended.\r\n\r\n**_Q:_** How does YubiLock actiavte and deactivate YubiKeys?\r\n**_A:_** YubiLock uses the xinput command to identify and control the output of YubiKeys. Namely:\r\n_xinput list_, _xinput --enable <id>_, _xinput --disable <id>_ and _xinput test <id>_.\r\n\r\n## Authors and Contributors\r\n-- \r\n\r\n## Changelog:\r\n### v 0.2:\r\n- renamed to YubiLock, as this name better portrays the function\r\n- instead of text notificaions, now descriptive icons are displayed\r\n- in case of changing xinput ids (e.g. devices are switched) old ids will be automatically activated\r\n\r\n### v 0.3\r\n- beautified icons\r\n- set working dir, to always allow relative import of icons\r\n- now preventing overtriggering when hitting key combinations in short succession\r\n\r\n### v 0.4\r\n- added exit handler, which will reactivate YubiKeys after script has exited\r\n\r\n### v 0.5\r\n- code rectified\r\n- introduced missing thread locking\r\n\r\n### v 0.6 (major update)\r\n- added a Panel Indicator (replacing notification of LOCK/UNLOCK)\r\n- major rectification of code\r\n- switched from thread based concurrency to process based for superb responsiveness\r\n- added key event listener, replacing triggering via external script over zmq\r\n- added settings.ini to grant user to customize time out and triggering key combination\r\n- eliminated minor bugs which led to laggy or unreliable unlocking\r\n\r\n\r\n## Support or Contact\r\nHaving trouble with YubiLock? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and weâ€™ll help you sort it out.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}